(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{562:function(e,t,a){"use strict";a.r(t);var n=a(6),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("记录一次小程序开发, 出现的坑以及一些知识\n")]),e._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("openID:不同APP不同openID。用户唯一标识, 跟人一一对应, 小程序分配给每个人的ID  OpenID = 用户微信号 & 公众平台APPID(两个数据加密得到的字符串)  不同公众号不同ID")])]),e._v(" "),a("li",[a("p",[e._v("unionID:即使不同应用, ID一样。通过获取用户基本信息接口, 开发者可通过OpenID来获取用户基本信息")])]),e._v(" "),a("li",[a("p",[e._v("appID(小程序ID):它其实就是小程序的「身份证号码」")])]),e._v(" "),a("li",[a("p",[e._v("AppSecret(小程序密钥)")])]),e._v(" "),a("li",[a("p",[e._v("PV:分享给了多少人")])]),e._v(" "),a("li",[a("p",[e._v("UV:分享的课程被多少人打开")])]),e._v(" "),a("li",[a("p",[e._v("openGid:小程序的群唯一标识的id")])])]),e._v(" "),a("h2",{attrs:{id:"微信内容校验-node-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微信内容校验-node-实现"}},[e._v("#")]),e._v(" 微信内容校验 node 实现")]),e._v(" "),a("h2",{attrs:{id:"利用-puppeteer-可以生成一个网页的图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用-puppeteer-可以生成一个网页的图片"}},[e._v("#")]),e._v(" 利用 puppeteer 可以生成一个网页的图片")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考文档"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"问题记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题记录"}},[e._v("#")]),e._v(" 问题记录")]),e._v(" "),a("ul",[a("li",[e._v("node没有原生的取POST请求体\nkoa中可以利用 koa-body, 如:router.post('/del_room', "),a("strong",[e._v("koaBody()")]),e._v(", async (ctx)\n"),a("strong",[e._v("但是")]),e._v("取xml koa-body不行, 可以从原生的数据中读取\n如:")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('getPostData = function (ctx) {\n    return new Promise((resolve, reject) => {\n        var data = "";\n        ctx.req.on("data", chunk => data += chunk);\n        ctx.req.on("end", () => resolve(data))\n        ctx.req.on("error", err => reject(err))\n        }\n    )\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);