(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{528:function(_,t,v){"use strict";v.r(t);var n=v(6),s=Object(n.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[v("img",{attrs:{src:"http://www.youhutong.com/static/appImage/article/thumb/8e43ba8c3810921daff968b4105fbfa5.png",alt:"mysql"}})]),_._v(" "),v("h2",{attrs:{id:"关键字解释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关键字解释"}},[_._v("#")]),_._v(" 关键字解释")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("name")]),_._v(":")])]),_._v(" "),v("p",[_._v("通俗的理解__name__ == '"),v("strong",[_._v("main")]),_._v("'：假如你叫小明.py，在朋友眼中，你是小明("),v("strong",[_._v("name")]),_._v(" == '小明')；在你自己眼中，你是你自己("),v("strong",[_._v("name")]),_._v(" == '"),v("strong",[_._v("main")]),_._v("')。")]),_._v(" "),v("p",[_._v("if "),v("strong",[_._v("name")]),_._v(" == '"),v("strong",[_._v("main")]),_._v("'的意思是：当.py文件被直接运行时，if "),v("strong",[_._v("name")]),_._v(" == '"),v("strong",[_._v("main")]),_._v("'之下的代码块将被运行；当.py文件以模块形式被导入时，if "),v("strong",[_._v("name")]),_._v(" == '"),v("strong",[_._v("main")]),_._v("'之下的代码块不被运行。")]),_._v(" "),v("p",[_._v("被运行的时候，"),v("strong",[_._v("name__是__main")]),_._v(";  当作为模块导入的时候为 当前文件名称")]),_._v(" "),v("ul",[v("li",[_._v("assert")])]),_._v(" "),v("p",[_._v("在开发一个程序时候，与其让它运行时崩溃，不如在它出现错误条件时就崩溃（返回错误）。这时候断言assert 就显得非常有用。")]),_._v(" "),v("p",[_._v("assert的语法格式：  assert expression")]),_._v(" "),v("p",[_._v("它的等价语句为：")]),_._v(" "),v("p",[_._v("if not expression:\nraise AssertionError")]),_._v(" "),v("p",[_._v("也可为assert添加异常参数，其实就是在断言表达式后添加字符串信息，用来解释断言并更好的知道是哪里出了问题。格式如下：")]),_._v(" "),v("p",[_._v("assert expression [, arguments]")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("init")])])]),_._v(" "),v("p",[_._v("定义类的时候，若是添加__init__方法，那么在创建类的实例的时候，实例会自动调用这个方法，一般用来对实例的属性进行初使化。")]),_._v(" "),v("p",[v("strong",[_._v("init")]),_._v(".py 文件的作用是将文件夹变为一个Python模块,Python 中的每个模块的包中，都有__init__.py 文件。")]),_._v(" "),v("p",[_._v("通常__init__.py 文件为空，但是我们还可以为它增加其他的功能。我们在导入一个包时，实际上是导入了它的__init__.py文件。")]),_._v(" "),v("p",[_._v("这样我们可以在__init__.py文件中批量导入我们所需要的模块，而不再需要一个一个的导入。")]),_._v(" "),v("ul",[v("li",[_._v("关于.pyc 文件 与 .pyo 文件")])]),_._v(" "),v("p",[_._v(".py文件的汇编,只有在import语句执行时进行，当.py文件第一次被导入时，它会被汇编为字节代码，并将字节码写入同名的.pyc文件中。后来每次导入操作都会直接执行.pyc 文件（当.py文件的修改时间发生改变，这样会生成新的.pyc文件），在解释器使用-O选项时，将使用同名的.pyo文件，这个文件去掉了断言（assert）、断行号以及其他调试信息，体积更小，运行更快。（使用-OO选项，生成的.pyo文件会忽略文档信息）")])])}),[],!1,null,null,null);t.default=s.exports}}]);